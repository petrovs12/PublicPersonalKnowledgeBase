{"pageProps":{"note":{"id":"6I2g5QI7rldW6fRaQrVsJ","title":"Train Test Splitting","desc":"","updated":1643912465799,"created":1642429651081,"custom":{},"fname":"science.stats.Train Test Splitting","type":"note","vault":{"fsPath":"vault"},"contentHash":"44a08c9800fcf4d1537a84a8255f6d8d","links":[{"type":"wiki","from":{"fname":"science.stats.Train Test Splitting","id":"6I2g5QI7rldW6fRaQrVsJ","vaultName":"vault"},"value":"^transductive-gnn","position":{"start":{"line":14,"column":286,"offset":646},"end":{"line":14,"column":307,"offset":667},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"^transductive-gnn"}},{"from":{"fname":"engineering.system_design.ML System Design.Recommender Systems","id":"QE1BddXlccbyYN1avaB4M","vaultName":"vault"},"type":"backlink","position":{"start":{"line":254,"column":1,"offset":6560},"end":{"line":254,"column":39,"offset":6598},"indent":[]},"value":"science.stats.Train Test Splitting"},{"from":{"fname":"engineering.system_design.ML System Design.Recommender Systems","id":"QE1BddXlccbyYN1avaB4M","vaultName":"vault"},"type":"backlink","position":{"start":{"line":253,"column":1,"offset":6506},"end":{"line":253,"column":54,"offset":6559},"indent":[]},"value":"science.stats.Train Test Splitting"}],"anchors":{"random-sampling":{"type":"header","text":"Random Sampling","value":"random-sampling","line":8,"column":0,"depth":1},"stratified-sampling":{"type":"header","text":"Stratified sampling","value":"stratified-sampling","line":10,"column":0,"depth":1},"time-series-sampling":{"type":"header","text":"Time series sampling","value":"time-series-sampling","line":14,"column":0,"depth":1},"recommender-system-test-set-split":{"type":"header","text":"Recommender System test set split","value":"recommender-system-test-set-split","line":18,"column":0,"depth":1},"graph-neural-nets":{"type":"header","text":"Graph Neural Nets:","value":"graph-neural-nets","line":30,"column":0,"depth":1},"transductive":{"type":"header","text":"Transductive","value":"transductive","line":32,"column":0,"depth":2},"inductive-learning":{"type":"header","text":"Inductive Learning","value":"inductive-learning","line":37,"column":0,"depth":2},"^recsys-start":{"type":"block","value":"recsys-start","line":18,"column":36},"^recSys-traintestsplit":{"type":"block","value":"recSys-traintestsplit","line":23,"column":65},"^recsys-end":{"type":"block","value":"recsys-end","line":28,"column":1},"^transductive-gnn":{"type":"block","value":"transductive-gnn","line":35,"column":45},"^inductive-gnn":{"type":"block","value":"inductive-gnn","line":39,"column":171}},"children":[],"parent":"DrDDAM98fbdfBEotQX5EQ","data":{},"schema":{"schemaId":"ruyvpn5bngeinwshxuy7y19","moduleId":"science"}},"body":"<h1 id=\"train-test-splitting\">Train Test Splitting<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#train-test-splitting\"></a></h1>\n<h1 id=\"random-sampling\">Random Sampling<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#random-sampling\"></a></h1>\n<h1 id=\"stratified-sampling\">Stratified sampling<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#stratified-sampling\"></a></h1>\n<p>If we have some set of characteristics, we want to be able to split the set into two subsets, one with the characteristics that are most similar to the characteristics of the other subset.</p>\n<h1 id=\"time-series-sampling\">Time series sampling<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#time-series-sampling\"></a></h1>\n<p> Split by expanding time windows (information set)</p>\n<h1 id=\"recommender-system-test-set-split-\"><a aria-hidden=\"true\" class=\"block-anchor anchor-heading icon-link\" id=\"^recsys-start\" href=\"#^recsys-start\"></a>Recommender System test set split <a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#recommender-system-test-set-split-\"></a></h1>\n<p> For collaborative filtering if we <strong>don't want to deal with cold starts</strong> directly with this model, use approach similar to stratified sampling. So we just mask some entries in the matrix randomly, should put roughly all items and all users in both the train and test set. Related to <a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">^transductive-gnn (Private)</a></p>\n<p><a aria-hidden=\"true\" class=\"block-anchor anchor-heading icon-link\" id=\"^recSys-traintestsplit\" href=\"#^recSys-traintestsplit\"></a>If we want to deal with the cold start in integrated way (idk of possible), then maybe can just split as we wish by rows/columns/connected components etc.\n<img src=\"/PublicPersonalKnowledgeBase/assets/images/2022-01-17-15-31-56.png\" alt=\"RecSys traintestsplit\"> </p>\n<p>Cold start problem is related to <sup id=\"fnref-inductive-gnn\"><a href=\"#fn-inductive-gnn\" class=\"footnote-ref\">inductive-gnn</a></sup>.</p>\n<p><a aria-hidden=\"true\" class=\"block-anchor anchor-heading icon-link\" id=\"^recsys-end\" href=\"#^recsys-end\"></a> </p>\n<h1 id=\"graph-neural-nets\">Graph Neural Nets:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#graph-neural-nets\"></a></h1>\n<h2 id=\"transductive\">Transductive<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#transductive\"></a></h2>\n<p><a aria-hidden=\"true\" class=\"block-anchor anchor-heading icon-link\" id=\"^transductive-gnn\" href=\"#^transductive-gnn\"></a> In transductive learning in graphs, we see the whole graph structure, and want to learn something\nabout unobserved node/edge labels/features. </p>\n<h2 id=\"inductive-learning\">Inductive Learning<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#inductive-learning\"></a></h2>\n<p><a aria-hidden=\"true\" class=\"block-anchor anchor-heading icon-link\" id=\"^inductive-gnn\" href=\"#^inductive-gnn\"></a> In transductive learning, we have access to both the node features and topology of test nodes while inductive learning requires testing on graphs unseen in the training. </p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/PublicPersonalKnowledgeBase/notes/QE1BddXlccbyYN1avaB4M\">Recommender Systems</a></li>\n</ul>","noteIndex":{"id":"wn8PE1RhG0znK1alrGFYv","title":"Root","desc":"","updated":1647507231129,"created":1631901573363,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"db285659ccac8b133c384de1ef51de66","links":[],"anchors":{"welcome-to-stefans-notes":{"type":"header","text":"Welcome to Stefan's Notes!","value":"welcome-to-stefans-notes","line":7,"column":0,"depth":1}},"children":["mxzxxu8z4e6krz99ht96y9d","W1EOZ27Tqx6RbiA2aW3DI","DyoLE2kwm9rRfRZhBGxPW","idhfogizmtcmvaamtalp3o3","4w8wBCSRvYUnGIZeozW03","vB321AipYCs6ldVC0APs9","h6WVdl1UTWVXeWuMJSZ1f","bth6m0exy9q9loxib1mc4al","4abAmH56ausbldEJbZokx","JyOFJ5NTPSVWMfiDy951X","0OO7fjCpcaGZg5qDRZr8z","138666663","pohXgII67dAxnoufG7yAP","6hs48bnjnaoxahk07exj74u","42r6290iqzLPmg9BY7fIp","3hoLerNJHjNkDziIKlFF2","T6meT3UNw0nRorEbzoPSl","hIOTXIIBj3vmhG1xc91lA","tnFlQuOAGPkbU2fZI7Cb1","Jb3w3f4x8kixLhrjUW6S1","LV6q5jlD2xtCF6yYFEqFC","ENDcCZFjAW9h66eDoFg7I","b5IeREnsTbeggC7rmWV0p","2hmbhdzcdljtdwln762gcrv","z9la6u9t3xueldj2omf2gc6","9akeo93l6b026jmu4t6e7pw","sc24o4jglr9jg29qr5v0e44","0mt5ao8tbbz3z5mdwe0aer8","r7rvb6nal69nfb6ogqdadnm","xujx5iuxskj10o0ajpi109n","lyl1rzqz6zwcswpwh0kafrm","skpw697vlqdq3t3uqxpq5e3","a4tts3oc3oms7wuralrbzdc","13a1ufqh6o8yi9evw1u5kv5"],"parent":null,"data":{},"body":"# Welcome to Stefan's Notes!\n\n        \n\nLast updated: 2021.12.30\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.95.0","enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false,"templateHierarchy":"template"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","assetsPrefix":"/PublicPersonalKnowledgeBase","siteUrl":"https://petrovs12.github.io","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"theme":"light","templateVersion":"0.97.0","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}