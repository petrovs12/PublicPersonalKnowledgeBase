{"pageProps":{"note":{"id":"ir5u91f6di3yclnfq9xnxxl","title":"Multiple Labels","desc":"","updated":1646305211122,"created":1646305163402,"custom":{},"fname":"science.stats.Regression.Classification.Multiple Labels","type":"note","vault":{"fsPath":"vault"},"contentHash":"3efc51c29edf5a7ffd2ea8e925ecde12","links":[{"from":{"fname":"science.stats.Regression.Classification","id":"mrutVzfoYT6wrHEOKLrWf","vaultName":"vault"},"type":"backlink","position":{"start":{"line":6,"column":1,"offset":36},"end":{"line":6,"column":61,"offset":96},"indent":[]},"value":"science.stats.Regression.Classification.Multiple Labels"}],"anchors":{"multilabel-classification":{"type":"header","text":"MultiLabel Classification","value":"multilabel-classification","line":8,"column":0,"depth":1},"keras-example":{"type":"header","text":"Keras Example","value":"keras-example","line":30,"column":0,"depth":2},"^multilabel":{"type":"block","value":"multilabel","line":8,"column":28}},"children":[],"parent":"mrutVzfoYT6wrHEOKLrWf","data":{}},"body":"<h1 id=\"multiple-labels\">Multiple Labels<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#multiple-labels\"></a></h1>\n<h1 id=\"multilabel-classification-\"><a aria-hidden=\"true\" class=\"block-anchor anchor-heading icon-link\" id=\"^multilabel\" href=\"#^multilabel\"></a>MultiLabel Classification <a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#multilabel-classification-\"></a></h1>\n<p><a href=\"https://machinelearningmastery.com/multi-label-classification-with-deep-learning/\">https://machinelearningmastery.com/multi-label-classification-with-deep-learning/</a>\n<a href=\"https://github.com/keras-team/keras/issues/741\">https://github.com/keras-team/keras/issues/741</a></p>\n<p>One way is to use sigmoid output, but not normalize w/ softmax/multilabel likelyhood, and have the loss function be point-wise binary crossentropy\nloss for each element, and sum them up (it works).</p>\n<pre><code>\nQ:\nI need train a multi-label softmax classifier, but there is a lot of one-hot code labels in examples, so how to change code to do it?\n\nA:elanmart commented on Sep 28, 2015\nDon't use softmax. Use sigmoid units in the output layer and then use \"binary_crossentrpy\" loss.\n</code></pre>\n<p><strong>Actually it's equivalent to train a single binary classifier to everything, but the learned hierarchical representation before the last label\nis shared.</strong></p>\n<h2 id=\"keras-example\">Keras Example<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#keras-example\"></a></h2>\n<pre class=\"language-{python}\"><code class=\"language-{python}\">\n# Build a classifier optimized for maximizing f1_score (uses class_weights)\n\nclf = Sequential()\n\nclf.add(Dropout(0.3))\nclf.add(Dense(xt.shape[1], 1600, activation='relu'))\nclf.add(Dropout(0.6))\nclf.add(Dense(1600, 1200, activation='relu'))\nclf.add(Dropout(0.6))\nclf.add(Dense(1200, 800, activation='relu'))\nclf.add(Dropout(0.6))\nclf.add(Dense(800, yt.shape[1], activation='sigmoid'))\n\nclf.compile(optimizer=Adam(), loss='binary_crossentropy')\n\nclf.fit(xt, yt, batch_size=64, nb_epoch=300, validation_data=(xs, ys), class_weight=W, verbose=0)\n\npreds = clf.predict(xs)\n\npreds[preds>=0.5] = 1\npreds[preds&#x3C;0.5] = 0\n\nprint f1_score(ys, preds, average='macro')\n\n</code></pre>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/PublicPersonalKnowledgeBase/notes/mrutVzfoYT6wrHEOKLrWf\">Classification</a></li>\n</ul>","noteIndex":{"id":"wn8PE1RhG0znK1alrGFYv","title":"Root","desc":"","updated":1647507231129,"created":1631901573363,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"db285659ccac8b133c384de1ef51de66","links":[],"anchors":{"welcome-to-stefans-notes":{"type":"header","text":"Welcome to Stefan's Notes!","value":"welcome-to-stefans-notes","line":7,"column":0,"depth":1}},"children":["mxzxxu8z4e6krz99ht96y9d","W1EOZ27Tqx6RbiA2aW3DI","DyoLE2kwm9rRfRZhBGxPW","idhfogizmtcmvaamtalp3o3","4w8wBCSRvYUnGIZeozW03","vB321AipYCs6ldVC0APs9","h6WVdl1UTWVXeWuMJSZ1f","bth6m0exy9q9loxib1mc4al","4abAmH56ausbldEJbZokx","JyOFJ5NTPSVWMfiDy951X","0OO7fjCpcaGZg5qDRZr8z","138666663","pohXgII67dAxnoufG7yAP","6hs48bnjnaoxahk07exj74u","42r6290iqzLPmg9BY7fIp","3hoLerNJHjNkDziIKlFF2","T6meT3UNw0nRorEbzoPSl","hIOTXIIBj3vmhG1xc91lA","tnFlQuOAGPkbU2fZI7Cb1","Jb3w3f4x8kixLhrjUW6S1","LV6q5jlD2xtCF6yYFEqFC","ENDcCZFjAW9h66eDoFg7I","b5IeREnsTbeggC7rmWV0p","2hmbhdzcdljtdwln762gcrv","z9la6u9t3xueldj2omf2gc6","9akeo93l6b026jmu4t6e7pw","sc24o4jglr9jg29qr5v0e44","0mt5ao8tbbz3z5mdwe0aer8","r7rvb6nal69nfb6ogqdadnm","xujx5iuxskj10o0ajpi109n","lyl1rzqz6zwcswpwh0kafrm","skpw697vlqdq3t3uqxpq5e3","a4tts3oc3oms7wuralrbzdc","13a1ufqh6o8yi9evw1u5kv5"],"parent":null,"data":{},"body":"# Welcome to Stefan's Notes!\n\n        \n\nLast updated: 2021.12.30\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.95.0","enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false,"templateHierarchy":"template"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","assetsPrefix":"/PublicPersonalKnowledgeBase","siteUrl":"https://petrovs12.github.io","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"theme":"light","templateVersion":"0.97.0","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}