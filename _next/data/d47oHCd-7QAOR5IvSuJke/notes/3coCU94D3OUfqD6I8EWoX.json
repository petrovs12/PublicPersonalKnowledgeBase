{"pageProps":{"note":{"id":"3coCU94D3OUfqD6I8EWoX","title":"Feature Stores","desc":"","updated":1644790979860,"created":1644588554746,"custom":{},"fname":"science.engineering.technologies.MLOps.Feature Stores","type":"note","vault":{"fsPath":"vault"},"contentHash":"b8e6db5febe4aeaddd268cc82d5d3b48","links":[{"type":"wiki","from":{"fname":"science.engineering.technologies.MLOps.Feature Stores","id":"3coCU94D3OUfqD6I8EWoX","vaultName":"vault"},"value":"^timeTravel","position":{"start":{"line":29,"column":129,"offset":1197},"end":{"line":29,"column":144,"offset":1212},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"^timeTravel"}},{"type":"wiki","from":{"fname":"science.engineering.technologies.MLOps.Feature Stores","id":"3coCU94D3OUfqD6I8EWoX","vaultName":"vault"},"value":"science.stats.Time Series","position":{"start":{"line":30,"column":1,"offset":1213},"end":{"line":30,"column":30,"offset":1242},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"science.stats.Time Series"}},{"type":"wiki","from":{"fname":"science.engineering.technologies.MLOps.Feature Stores","id":"3coCU94D3OUfqD6I8EWoX","vaultName":"vault"},"value":"science.stats.Data Leakage","position":{"start":{"line":31,"column":1,"offset":1243},"end":{"line":31,"column":31,"offset":1273},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"science.stats.Data Leakage"}},{"type":"wiki","from":{"fname":"science.engineering.technologies.MLOps.Feature Stores","id":"3coCU94D3OUfqD6I8EWoX","vaultName":"vault"},"value":"science.math.Stochastic Calculus.Filtration","position":{"start":{"line":32,"column":1,"offset":1274},"end":{"line":32,"column":48,"offset":1321},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"science.math.Stochastic Calculus.Filtration"}},{"type":"wiki","from":{"fname":"science.engineering.technologies.MLOps.Feature Stores","id":"3coCU94D3OUfqD6I8EWoX","vaultName":"vault"},"value":"engineering.system_design.nosql databases","position":{"start":{"line":34,"column":58,"offset":1380},"end":{"line":34,"column":103,"offset":1425},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"engineering.system_design.nosql databases"}},{"type":"wiki","from":{"fname":"science.engineering.technologies.MLOps.Feature Stores","id":"3coCU94D3OUfqD6I8EWoX","vaultName":"vault"},"value":"engineering.system_design.nosql databases.BigTable","position":{"start":{"line":34,"column":109,"offset":1431},"end":{"line":34,"column":163,"offset":1485},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"engineering.system_design.nosql databases.BigTable"}},{"type":"wiki","from":{"fname":"science.engineering.technologies.MLOps.Feature Stores","id":"3coCU94D3OUfqD6I8EWoX","vaultName":"vault"},"value":"science.engineering.technologies.MLOps.Training-Serving Skew","position":{"start":{"line":65,"column":4,"offset":2960},"end":{"line":65,"column":68,"offset":3024},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"science.engineering.technologies.MLOps.Training-Serving Skew"}},{"type":"wiki","from":{"fname":"science.engineering.technologies.MLOps.Feature Stores","id":"3coCU94D3OUfqD6I8EWoX","vaultName":"vault"},"value":"science.engineering.technologies.MLOps.Feature Stores","position":{"start":{"line":69,"column":24,"offset":3076},"end":{"line":69,"column":35,"offset":3087},"indent":[]},"xvault":false,"sameFile":true,"to":{"fname":"science.engineering.technologies.MLOps.Feature Stores","anchorHeader":"^reuse"}},{"type":"wiki","from":{"fname":"science.engineering.technologies.MLOps.Feature Stores","id":"3coCU94D3OUfqD6I8EWoX","vaultName":"vault"},"value":"science.stats.Distribution Drift","position":{"start":{"line":74,"column":16,"offset":3188},"end":{"line":74,"column":52,"offset":3224},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"science.stats.Distribution Drift"}},{"type":"wiki","from":{"fname":"science.engineering.technologies.MLOps.Feature Stores","id":"3coCU94D3OUfqD6I8EWoX","vaultName":"vault"},"value":"engineering.system_design.nosql databases.BigTable","position":{"start":{"line":90,"column":1,"offset":3547},"end":{"line":90,"column":55,"offset":3601},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"engineering.system_design.nosql databases.BigTable"}},{"type":"wiki","from":{"fname":"science.engineering.technologies.MLOps.Feature Stores","id":"3coCU94D3OUfqD6I8EWoX","vaultName":"vault"},"value":"engineering.system_design.nosql","position":{"start":{"line":92,"column":1,"offset":3603},"end":{"line":92,"column":36,"offset":3638},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"engineering.system_design.nosql"}},{"from":{"fname":"science.engineering.technologies.MLOps.Feature Stores","id":"3coCU94D3OUfqD6I8EWoX","vaultName":"vault"},"type":"backlink","position":{"start":{"line":69,"column":24,"offset":3076},"end":{"line":69,"column":35,"offset":3087},"indent":[]},"value":"science.engineering.technologies.MLOps.Feature Stores"},{"from":{"fname":"science.engineering.technologies.MLOps.Training-Serving Skew","id":"ykZOLmmEoxBAesJmh6TI2","vaultName":"vault"},"type":"backlink","position":{"start":{"line":11,"column":79,"offset":987},"end":{"line":11,"column":136,"offset":1044},"indent":[]},"value":"science.engineering.technologies.MLOps.Feature Stores"}],"anchors":{"another-perspective-from-talk":{"type":"header","text":"Another perspective from talk","value":"another-perspective-from-talk","line":52,"column":0,"depth":1},"challenges-with-data-for-ml":{"type":"header","text":"Challenges with data for ml","value":"challenges-with-data-for-ml","line":54,"column":0,"depth":2},"building-feature-pipelines-is-hard":{"type":"header","text":"Building Feature Pipelines is hard","value":"building-feature-pipelines-is-hard","line":64,"column":0,"depth":3},"consistent-data-access":{"type":"header","text":"Consistent Data Access","value":"consistent-data-access","line":69,"column":0,"depth":3},"duplication-of-effort":{"type":"header","text":"Duplication of Effort","value":"duplication-of-effort","line":74,"column":0,"depth":2},"data-quality-monitoring":{"type":"header","text":"Data Quality Monitoring","value":"data-quality-monitoring","line":78,"column":0,"depth":3},"how-feature-stores-help":{"type":"header","text":"How feature stores help","value":"how-feature-stores-help","line":87,"column":0,"depth":2},"time-travel-problem-and-information-sets":{"type":"header","text":"Time Travel Problem and Information Sets","value":"time-travel-problem-and-information-sets","line":111,"column":0,"depth":2},"feats-overview":{"type":"header","text":"FEATS Overview","value":"feats-overview","line":122,"column":0,"depth":1},"^reuse":{"type":"block","value":"reuse","line":47,"column":47},"^timeTravel":{"type":"block","value":"timeTravel","line":111,"column":44}},"children":[],"parent":"XIkHzTaTzXowP2s1JUHyZ","data":{}},"body":"<h1 id=\"feature-stores\">Feature Stores<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#feature-stores\"></a></h1>\n<p>Tl;dr\nSeveral perspectives:</p>\n<ol>\n<li>Implementational\nLayer on top of a DB, supporting many writes, key-based retrieval, last-before-timestamp retrieval.\nSupports writing batch or streaming features.\nread: can ask for a feature x for item/customer/whatever id y at time t easily and get back the correct result.\nFS handles backfilling of these features.\nUseful for embedding maps as well.</li>\n</ol>\n<ol start=\"2\">\n<li>Semantic\nHave an 'easy and consistent way to write something that generates features ppl or models can use.\nThen create models that take data directly from the feature store, and it's easily portable to production.</li>\n</ol>\n<p>Many of the points are from the <a href=\"https://docs.feast.dev/\">FEASTS Docs</a>.</p>\n<p>Feature Stores are systems that support the following functionalities: </p>\n<ol>\n<li>Consistent Access to Data During Model Ideation, Training, Testing, and Deployment.\nDifferent roles in the organization have divergent objectives and data sources. It would be best if the path between 'prototype data source' and 'production data sources' is as short as possible.</li>\n<li>Point-in-time correctness\nWhen the 'predict' call comes, we need the latest allowable value of the feature for the entity in question. Look below for the <a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">^timeTravel (Private)</a>\n<a href=\"/PublicPersonalKnowledgeBase/notes/9g50kaYv8jpHHgyrpKHyF\">Time Series</a>\n<a href=\"/PublicPersonalKnowledgeBase/notes/2XiS5aCtw21fA9eepyGOc\">Data Leakage</a>\n<a href=\"/PublicPersonalKnowledgeBase/notes/Xqmd659wwoSE3tVeYFxKo\">Filtration</a></li>\n</ol>\n<p>One of the <strong>key value propositions</strong> when compared to a <a href=\"/PublicPersonalKnowledgeBase/notes/ku6IjaM8VZscHWIneLNJv\">Nosql Databases</a> like <a href=\"/PublicPersonalKnowledgeBase/notes/eI2UkNEvXg8Is3tNzvvoQ\">BigTable</a> by itself.</p>\n<ol start=\"3\">\n<li>Deploying new features into prod is difficult\nFor example, if a data scientist has created some long feature calculation pipeline during the script, it's possible to shoehorn this into production.\nBut maybe it's computationally burdensome, especially if it's using a bunch of time/data to compute (e.g. rolling windows).\nThen the prod system would have to make additional queries to fetch data for a week back, then aggregate over it- very slow.\nFeature store can be 'Database for kids' in this sense- a database ml ppl can experiment and put scripts/ ETL's for feature calculation without trouble.</li>\n<li><a aria-hidden=\"true\" class=\"block-anchor anchor-heading icon-link\" id=\"^reuse\" href=\"#^reuse\"></a>Features aren't reused across projects/ ppl Clear what this means</li>\n</ol>\n<h1 id=\"another-perspective-from-talk\">Another perspective from <a href=\"https://www.youtube.com/watch?v=6OCUMbEtSLU&#x26;ab_channel=StanfordMLSysSeminars\">talk</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#another-perspective-from-talk\"></a></h1>\n<h2 id=\"challenges-with-data-for-ml\">Challenges with data for ml<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#challenges-with-data-for-ml\"></a></h2>\n<p> Data pipelines are messy.\nDifferent between training and serving\nDifferent data sources between training and serving\nLack of point-in-time correctness/information sets/ Filtrations</p>\n<p> Models can be developed by DS, then re-developed and maintained by DE/MLE.</p>\n<h3 id=\"building-feature-pipelines-is-hard\">Building Feature Pipelines is hard<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#building-feature-pipelines-is-hard\"></a></h3>\n<ul>\n<li>Same semantics, adapted to different requirements, lead to <strong>different production requirements</strong> - distributed compute, strem processing, low-latency transformations.</li>\n<li>Reliable computation and <strong>backfilling</strong> of features is a large investment</li>\n</ul>\n<h3 id=\"consistent-data-access\">Consistent Data Access<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#consistent-data-access\"></a></h3>\n<ul>\n<li>Redevelopment of pipelines- inconsistencties in data</li>\n<li><a href=\"/PublicPersonalKnowledgeBase/notes/ykZOLmmEoxBAesJmh6TI2\">Training-Serving Skew</a> </li>\n</ul>\n<h2 id=\"duplication-of-effort\">Duplication of Effort<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#duplication-of-effort\"></a></h2>\n<p>This is covered in the <a href=\"/PublicPersonalKnowledgeBase/notes/3coCU94D3OUfqD6I8EWoX#^reuse\">Feature Stores</a> point above</p>\n<h3 id=\"data-quality-monitoring\">Data Quality Monitoring<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#data-quality-monitoring\"></a></h3>\n<ul>\n<li>Logging serving times, computation times</li>\n<li>Checking for <a href=\"/PublicPersonalKnowledgeBase/notes/Zh0txnUCi8NGy872tQhGN\">Distribution Drift</a></li>\n<li>Checking for 'Freshness', i.e. have we re-computed the features recently</li>\n</ul>\n<h2 id=\"how-feature-stores-help\">How feature stores help<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how-feature-stores-help\"></a></h2>\n<p>They are usually built on top of existing data stores, eg. DynamoDB, Redis, BigTable, etc.\nNormally the underlying storage system should support fast key lookup + timestamp range queries, e.g. BigTable style\n<a href=\"/PublicPersonalKnowledgeBase/notes/eI2UkNEvXg8Is3tNzvvoQ\">BigTable</a></p>\n<p><a href=\"/PublicPersonalKnowledgeBase/notes/vZEKj8XPxSQLPC17acPay\">Nosql</a></p>\n<p>Honestly, for ML features, it does seem like something that:</p>\n<ul>\n<li>is key-based</li>\n<li>supports <strong>appends</strong>, range queries, and one can put secondary indices on\nsounds perfect.</li>\n</ul>\n<h2 id=\"time-travel-problem-and-information-sets-\"><a aria-hidden=\"true\" class=\"block-anchor anchor-heading icon-link\" id=\"^timeTravel\" href=\"#^timeTravel\"></a>Time Travel Problem and Information Sets <a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#time-travel-problem-and-information-sets-\"></a></h2>\n<p>Issue:\nwe would like to serve a model at time <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span> for lookahead period <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span></span>, so we would like to use the data up to and including time <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo>−</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">T-h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span></span>. So all features we use should be 'current' as of that timestamp. </p>\n<p>In other words, when we're making prediction at time <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span> with planning horizon <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span></span>, the <strong>information set</strong> we can use is the one available at time <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo>−</mo><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">T-h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span></span>.</p>\n<p>Some <a href=\"https://www.tecton.ai/blog/time-travel-in-ml/\">feature store solutions can help</a> with this problem.</p>\n<h1 id=\"feats-overview\">FEATS Overview<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#feats-overview\"></a></h1>\n<p><img src=\"https://www.tecton.ai/blog/time-travel-in-ml/\"></p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/PublicPersonalKnowledgeBase/notes/3coCU94D3OUfqD6I8EWoX\">Feature Stores</a></li>\n<li><a href=\"/PublicPersonalKnowledgeBase/notes/ykZOLmmEoxBAesJmh6TI2\">Training-Serving Skew</a></li>\n</ul>","noteIndex":{"id":"wn8PE1RhG0znK1alrGFYv","title":"Root","desc":"","updated":1647507231129,"created":1631901573363,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"db285659ccac8b133c384de1ef51de66","links":[],"anchors":{"welcome-to-stefans-notes":{"type":"header","text":"Welcome to Stefan's Notes!","value":"welcome-to-stefans-notes","line":7,"column":0,"depth":1}},"children":["mxzxxu8z4e6krz99ht96y9d","W1EOZ27Tqx6RbiA2aW3DI","DyoLE2kwm9rRfRZhBGxPW","idhfogizmtcmvaamtalp3o3","4w8wBCSRvYUnGIZeozW03","vB321AipYCs6ldVC0APs9","h6WVdl1UTWVXeWuMJSZ1f","bth6m0exy9q9loxib1mc4al","4abAmH56ausbldEJbZokx","JyOFJ5NTPSVWMfiDy951X","0OO7fjCpcaGZg5qDRZr8z","138666663","pohXgII67dAxnoufG7yAP","6hs48bnjnaoxahk07exj74u","42r6290iqzLPmg9BY7fIp","3hoLerNJHjNkDziIKlFF2","T6meT3UNw0nRorEbzoPSl","hIOTXIIBj3vmhG1xc91lA","tnFlQuOAGPkbU2fZI7Cb1","Jb3w3f4x8kixLhrjUW6S1","LV6q5jlD2xtCF6yYFEqFC","ENDcCZFjAW9h66eDoFg7I","b5IeREnsTbeggC7rmWV0p","2hmbhdzcdljtdwln762gcrv","z9la6u9t3xueldj2omf2gc6","9akeo93l6b026jmu4t6e7pw","sc24o4jglr9jg29qr5v0e44","0mt5ao8tbbz3z5mdwe0aer8","r7rvb6nal69nfb6ogqdadnm","xujx5iuxskj10o0ajpi109n","lyl1rzqz6zwcswpwh0kafrm","skpw697vlqdq3t3uqxpq5e3","a4tts3oc3oms7wuralrbzdc","13a1ufqh6o8yi9evw1u5kv5"],"parent":null,"data":{},"body":"# Welcome to Stefan's Notes!\n\n        \n\nLast updated: 2021.12.30\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.95.0","enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false,"templateHierarchy":"template"},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","assetsPrefix":"/PublicPersonalKnowledgeBase","siteUrl":"https://petrovs12.github.io","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"theme":"light","templateVersion":"0.97.0","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}